proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=STATIC:10m inactive=7d use_temp_path=off;

upstream frontend {
  server 127.0.0.1:3000;
}

upstream backend {
  server 127.0.0.1:8001;
}

map $http_user_agent $log_ua {

  ~Pingdom 0;
  ~Googlebot 0;
  ~Baiduspider 0;
  ~axios 0;

  default 1;
}

map $http_upgrade $connection_upgrade {
  default upgrade;
  ''      close;
}

server {
  charset UTF-8;
  server_name          atomsgame.ru;

  listen [::]:443 ssl ipv6only=on; # managed by Certbot
  listen 443 ssl http2; # managed by Certbot and http2

  ssl_certificate /etc/letsencrypt/live/atomsgame.ru/fullchain.pem; # managed by Certbot
  ssl_certificate_key /etc/letsencrypt/live/atomsgame.ru/privkey.pem; # managed by Certbot

  include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
  ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

  keepalive_timeout    70;
  client_max_body_size 32m;

  server_tokens off;

  access_log /var/log/nginx/access.log combined if=$log_ua;

  gzip on;
  gzip_min_length 1000;
  gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;

  location /api {
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Host $http_host;
    proxy_redirect off;
    proxy_pass http://backend;
  }

  location /ws {
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
    proxy_set_header Host $host;
    proxy_pass http://backend;
  }

  location /_next/data {
    proxy_pass http://frontend;

    access_log off;
    log_not_found off;
  }

  location /_next/static {
    proxy_cache STATIC;
    proxy_pass http://frontend;

    access_log off;
    log_not_found off;
  }

  location /static {
    proxy_cache STATIC;
    proxy_ignore_headers Cache-Control;
    proxy_cache_valid 60m;
    proxy_pass http://frontend;

    access_log off;
    log_not_found off;
  }

  location / {
    proxy_pass http://frontend;
  }
}

server {
  listen 80;
  listen [::]:80;
  server_name atomsgame.ru;
  return 301 https://$server_name$request_uri;
}

server {
    listen 80;
    listen 443;
    server_name 194.58.109.178;
    return 301 https://atomsgame.ru$request_uri;
}